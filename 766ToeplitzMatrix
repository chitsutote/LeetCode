/******
*
*   設立一個map 只要檢查過就設定為1
*   到第二列的時候就不用再重複檢查
*
*
*
*
*******/



class Solution {
public:
    bool isToeplitzMatrix(vector<vector<int>>& matrix) {
        int col = matrix.size();
        int row = matrix[0].size();
        
        vector<vector<int>> map(col,vector<int>(row,0));
 
        for(int i = 0;i < col; i++){
            for(int j = 0 ; j < row ; j++){
                if(map[i][j] == 1) continue;
               
                int x = i;
                int y = j;
                while(x+1 < col && y+1 < row){
                    if(matrix[x][y] == matrix[x+1][y+1]){
                        x++;
                        y++;
                        map[x][y] = 1;
                    }else{
                        return false;
                    }
                }
            }
          
        }
       
        return true;
        
    }
};


/****
  網路上解法:  col=0那一行 與row=0 那一列 可以不用考慮 因為只會有單數個
  從(1,1)開始 只要往左上有相同 掃完剩下的 就是Toeplitz Matrix

***/

class Solution {
public:
    bool isToeplitzMatrix(vector<vector<int>>& matrix) {
        int m = matrix.size(), n = matrix[0].size();
        for (int i = 1; i < m; i++)
            for (int j = 1; j < n; j++)
                if (matrix[i][j] != matrix[i - 1][j - 1])
                    return false;
        return true;
    }
};
