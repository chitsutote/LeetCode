/*****************
Question:
Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

For example, given nums = [0, 1, 0, 3, 12], after calling your function, nums should be [1, 3, 12, 0, 0].

Thought:
adjust the sort method
bubble sort used here

too many redundant procedure

4xx ms

 ******************/


class Solution {
		public:
				void moveZeroes(vector<int>& nums) {
						int tmp = 0;
						for(int i = 0 ; i < nums.size() ; i++){
								for(int j = 0 ; j < nums.size() -1 -i  ; j++){
										if(nums[j] == 0){ 
												tmp = nums[j];
												nums[j] = nums [j+1];
												nums[j+1] = tmp;

										}


								}
						}
				}
};


/****

 zeroCnt for how many zero is moving to back
 traverse from back , move every element forward 1 position when encountering 0
 terminate from current position to total length minus zeroCnt
 
 43ms

****/


class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        
        int zeroCnt = 0;
        for(int i = nums.size()-1 ; i >= 0 ; i--){
            
            if(nums[i] == 0){
                zeroCnt++;
                int j = i;
                for(;j < (nums.size()-zeroCnt) ;j++){
                   
                    nums[j] = nums[j+1];
                }
                nums[j] = 0;
            }
           
        }
    }
};


